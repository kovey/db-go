package models

// Code generated by ksql.
// Do'nt Edit!!!
// Do'nt Edit!!!
// Do'nt Edit!!!
//
// from database: shop
// table:         user
// orm version:   1.0.0
// created time:  2024-11-11 00:24:27

import (
	"context"

	"github.com/kovey/db-go/v3"
	"github.com/kovey/db-go/v3/model"
)

const (
	Table_User            = "user"        //
	Table_User_Address    = "address"     // 收货地址
	Table_User_CreateTime = "create_time" // 创建时间
	Table_User_Id         = "id"          // 主键
	Table_User_Mobile     = "mobile"      // 手机号
	Table_User_RealName   = "real_name"   // 真实姓名
	Table_User_UpdateTime = "update_time" // 更新时间
	Table_User_UserName   = "user_name"   // 名称
)

type User struct {
	*model.Model `db:"-" json:"-"` // model
	Address      string            `db:"address" json:"address"`         // 收货地址
	CreateTime   int64             `db:"create_time" json:"create_time"` // 创建时间
	Id           int64             `db:"id" json:"id"`                   // 主键
	Mobile       int64             `db:"mobile" json:"mobile"`           // 手机号
	RealName     string            `db:"real_name" json:"real_name"`     // 真实姓名
	UpdateTime   int64             `db:"update_time" json:"update_time"` // 更新时间
	UserName     string            `db:"user_name" json:"user_name"`     // 名称
}

func NewUser() *User {
	return &User{Model: model.NewModel(Table_User, "id", model.Type_Int)}
}

func (self *User) Save(ctx context.Context) error {
	return self.Model.Save(ctx, self)
}

func (self *User) Clone() ksql.RowInterface {
	return NewUser()
}

func (self *User) Values() []any {
	return []any{&self.Address, &self.CreateTime, &self.Id, &self.Mobile, &self.RealName, &self.UpdateTime, &self.UserName}
}

func (self *User) Columns() []string {
	return []string{"address", "create_time", "id", "mobile", "real_name", "update_time", "user_name"}
}

func (self *User) Delete(ctx context.Context) error {
	return self.Model.Delete(ctx, self)
}
